
# This library is very simple, since it only has one function called
# ``add_integer()``.


import:
    >>> add_integer = __import__("0-add_integer").add_integer
    >>> add_integer(1, 2)
    3

Negative numbers:
    >>> add_integer(100, -2)
    98

default numbers:
    >>> add_integer(2)
    100

It also works with floating-point values:
    >>> add_integer(100.3, -2)
    98

It also works with floating-point values:
    >>> add_integer(-2.2)
    96

exit of value:
    >>> type(add_integer(100.3, -2))
    <type 'int'>

# Non-Numbers
# ===========

string as arguments:
    >>> add_integer(4, "School")
    Traceback (most recent call last):
    TypeError: b must be an integer

None as arguments:
    >>> add_integer(None)
    Traceback (most recent call last):
    TypeError: a must be an integer

args:
    >>> add_integer()
    Traceback (most recent call last):
    TypeError: add_integer() takes at least 1 argument (0 given)

Add three numbers:
    >>> add_integer(7, 7, 7)
    Traceback (most recent call last):
    TypeError: add_integer() takes at most 2 arguments (3 given)

Float overflow:
    >>> add_integer(float('inf'), 7)
    Traceback (most recent call last):
    OverflowError: cannot convert float infinity to integer

NaN float:
    >>> add_integer(float('NaN'), 7)
    Traceback (most recent call last):
    ValueError: cannot convert float NaN to integer
